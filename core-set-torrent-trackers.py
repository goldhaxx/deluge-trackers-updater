import json
import deluge_client

# This script reads the UUIDs and names of torrents from the torrents.json file and updates their trackers
# using the Deluge RPC client.

# Deluge daemon settings (Replace these with your actual Deluge daemon details)
client = deluge_client.DelugeRPCClient('127.0.0.1', 58846, 'username', 'password')
client.connect()

# Load the torrent data from the JSON file generated by the get_torrents.sh script.
# The JSON file contains an array of objects, each with a 'uuid' and 'name' key.
with open('torrents.json', 'r') as f:
    torrents = json.load(f)

# Define the new trackers to be set for each torrent.
# These URLs are used to announce the torrent to the respective trackers.
new_trackers = [
    {"tier": 0, "url": "https://routing.bgp.technology/d3f35f2518af72f88366a084988e90df/announce"},
    {"tier": 0, "url": "https://ssl.empirehost.me/d3f35f2518af72f88366a084988e90df/announce"},
    {"tier": 0, "url": "https://localhost.stackoverflow.tech/d3f35f2518af72f88366a084988e90df/announce"}
]

# Iterate over each torrent in the list and update its trackers.
for torrent in torrents:
    uuid = torrent['uuid']  # Extract the torrent's UUID
    name = torrent['name']  # Extract the torrent's name

    # Set the new trackers for the torrent using the Deluge RPC client.
    # The core.set_torrent_trackers method replaces the current trackers with the specified ones.
    client.call('core.set_torrent_trackers', uuid, new_trackers)
    
    # Output the name and UUID of the modified torrent to the terminal.
    print(f"Updated trackers for torrent: {name} (UUID: {uuid})")

# Inform the user that the tracker update process has been completed.
print("Tracker update process completed.")
